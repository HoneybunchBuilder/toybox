name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        toolsets: [
          {host: windows-2022, gen: Ninja Multi-Config, cc: clang, cxx: clang++, vcpkg: x64-windows, dep: "x64-windows dynamic", plat: windows, extra: "-DVCPKG_CRT_LINKAGE=dynamic"},
          {host: windows-2022, gen: Ninja Multi-Config, cc: clang, cxx: clang++, vcpkg: x64-windows-static, dep: "x64-windows static", plat: windows, extra: "-DVCPKG_CRT_LINKAGE=static"},
          {host: windows-2022, gen: Ninja Multi-Config, cc: gcc, cxx: g++, vcpkg: x64-mingw-dynamic, dep: "x64-mingw dynamic", plat: mingw, extra: ""},
          {host: windows-2022, gen: Ninja Multi-Config, cc: gcc, cxx: g++, vcpkg: x64-mingw-static, dep: "x64-mingw static", plat: mingw, extra: ""},
          {host: windows-2022, gen: Visual Studio 17 2022, cc: clang-cl, cxx: clang-cl, vcpkg: x64-windows, dep: "x64-windows dynamic", plat: windows, extra: "-DVCPKG_CRT_LINKAGE=dynamic -Ax64 -TClangCL"},
          {host: windows-2022, gen: Visual Studio 17 2022, cc: clang-cl, cxx: clang-cl, vcpkg: x64-windows-static, dep: "x64-windows static", plat: windows, extra: "-DVCPKG_CRT_LINKAGE=static -Ax64 -TClangCL"},
          {host: windows-2022, gen: Ninja Multi-Config, cc: clang, cxx: clang++, vcpkg: arm64-android, dep: "arm64-android static", plat: android, extra: "-DANDROID_PLATFORM=android-29 -DANDROID_ABI=arm64-v8a -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=C:/vcpkg/scripts/toolchains/android.cmake"},
          {host: windows-2022, gen: Ninja Multi-Config, cc: clang, cxx: clang++, vcpkg: x64-android, dep: "x64-android static", plat: android, extra: "-DANDROID_PLATFORM=android-29 -DANDROID_ABI=x86_64 -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=C:/vcpkg/scripts/toolchains/android.cmake"},
          {host: ubuntu-22.04, gen: Ninja Multi-Config, cc: clang, cxx: clang++, vcpkg: x64-linux, dep: "x64-linux dynamic", plat: linux, extra: "-DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake"},
          {host: ubuntu-22.04, gen: Ninja Multi-Config, cc: gcc, cxx: g++, vcpkg: x64-linux, dep: "x64-linux dynamic", plat: linux, extra: "-DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake"},
        ]

    runs-on: ${{matrix.toolsets.host}}

    env:
      CMAKE_GENERATOR: ${{matrix.toolsets.gen}}
      CC: ${{matrix.toolsets.cc}}
      CXX: ${{matrix.toolsets.cxx}}

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: 'true'

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Install Vulkan SDK
      uses: humbletim/install-vulkan-sdk@v1.1.1

    - name: Install Dependencies
      run: cmake -P ./cmake/Dependencies.cmake ${{matrix.toolsets.dep}}

    - name: Configure CMake
      run: cmake -B build ${{matrix.toolsets.extra}} -DVCPKG_TARGET_TRIPLET=${{matrix.toolsets.vcpkg}}

    - name: Build Debug
      run: cmake --build build --config Debug
    - name: Build RelWithDebInfo
      run: cmake --build build --config RelWithDebInfo
    - name: Build Release
      run: cmake --build build --config Release
