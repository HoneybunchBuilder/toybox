#pragma once

// Per view matrix look up table
// So that each view is pointing at the right face of the cubemap
// Generated manually by doing the math on the CPU and writing the values here
/*
    float4x4 proj = {.row0 = {0}};
    reverse_perspective(&proj, PI_2, 1.0, 0.1, 1000.0f);

    float4x4 view = {.row0 = {0}};
    look_forward(&view, (float3){0}, (float3){0, -1, 0}, (float3){1, 0, 0});

    float4x4 vp = {.row0 = {0}};
    mulmf44(&proj, &view, &vp);
*/
static const float4x4 view_proj_lut[6] = {
    // X+
    {0.00000000, 0.00000000, 0.000100010002, -1.00000000,
     0.00000000, 1.00000000, 0.00000000, 0.00000000,
     -1.00000000, 0.00000000, 0.00000000,  0.00000000,
     0.00000000, 0.00000000, 0.100010000, 0.00000000},
    // X-
    {0.00000000, 0.00000000, -0.000100010002, 1.00000000,
     0.00000000, 1.00000000, 0.00000000, 0.00000000,
     1.00000000, 0.00000000, 0.00000000,  0.00000000,
     0.00000000, 0.00000000, 0.100010000, 0.00000000},
    // Y+
    {1.00000000, 0.00000000, 0.00000000, 0.00000000,
     0.00000000, 0.00000000, -0.000100010002, 1.00000000,
     0.00000000, 1.00000000, 0.00000000, 0.00000000,
     0.00000000, 0.00000000, 0.100010000, 0.00000000,},
    // Y-
    {-1.00000000, 0.00000000, 0.00000000, 0.00000000,
     0.00000000, 0.00000000, 0.000100010002, -1.00000000,
     0.00000000, 1.00000000, 0.00000000, 0.00000000,
     0.00000000, 0.00000000, 0.100010000, 0.00000000,},
    // Z+
    {1.00000000, 0.00000000, 0.00000000, 0.00000000,
     0.00000000, 1.00000000, 0.00000000, 0.00000000,
     0.00000000, 0.00000000, 0.000100010002, -1.00000000,
     0.00000000, 0.00000000, 0.100010000, 0.00000000},
    // Z-
    {-1.00000000, 0.00000000, 0.00000000, 0.00000000,
     0.00000000, 1.00000000, 0.00000000, 0.00000000,
     0.00000000, 0.00000000, -0.000100010002, 1.00000000,
     0.00000000, 0.00000000, 0.100010000, 0.00000000},
};